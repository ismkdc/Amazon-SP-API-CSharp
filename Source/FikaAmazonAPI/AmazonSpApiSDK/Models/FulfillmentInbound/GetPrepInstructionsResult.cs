/*
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.FulfillmentInbound
{
    /// <summary>
    ///     GetPrepInstructionsResult
    /// </summary>
    [DataContract]
    public class GetPrepInstructionsResult : IEquatable<GetPrepInstructionsResult>, IValidatableObject
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="GetPrepInstructionsResult" /> class.
        /// </summary>
        /// <param name="sKUPrepInstructionsList">sKUPrepInstructionsList.</param>
        /// <param name="invalidSKUList">invalidSKUList.</param>
        /// <param name="aSINPrepInstructionsList">aSINPrepInstructionsList.</param>
        /// <param name="invalidASINList">invalidASINList.</param>
        public GetPrepInstructionsResult(SKUPrepInstructionsList sKUPrepInstructionsList = default,
            InvalidSKUList invalidSKUList = default, ASINPrepInstructionsList aSINPrepInstructionsList = default,
            InvalidASINList invalidASINList = default)
        {
            SKUPrepInstructionsList = sKUPrepInstructionsList;
            InvalidSKUList = invalidSKUList;
            ASINPrepInstructionsList = aSINPrepInstructionsList;
            InvalidASINList = invalidASINList;
        }

        /// <summary>
        ///     Gets or Sets SKUPrepInstructionsList
        /// </summary>
        [DataMember(Name = "SKUPrepInstructionsList", EmitDefaultValue = false)]
        public SKUPrepInstructionsList SKUPrepInstructionsList { get; set; }

        /// <summary>
        ///     Gets or Sets InvalidSKUList
        /// </summary>
        [DataMember(Name = "InvalidSKUList", EmitDefaultValue = false)]
        public InvalidSKUList InvalidSKUList { get; set; }

        /// <summary>
        ///     Gets or Sets ASINPrepInstructionsList
        /// </summary>
        [DataMember(Name = "ASINPrepInstructionsList", EmitDefaultValue = false)]
        public ASINPrepInstructionsList ASINPrepInstructionsList { get; set; }

        /// <summary>
        ///     Gets or Sets InvalidASINList
        /// </summary>
        [DataMember(Name = "InvalidASINList", EmitDefaultValue = false)]
        public InvalidASINList InvalidASINList { get; set; }

        /// <summary>
        ///     Returns true if GetPrepInstructionsResult instances are equal
        /// </summary>
        /// <param name="input">Instance of GetPrepInstructionsResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetPrepInstructionsResult input)
        {
            if (input == null)
                return false;

            return
                (
                    SKUPrepInstructionsList == input.SKUPrepInstructionsList ||
                    (SKUPrepInstructionsList != null &&
                     SKUPrepInstructionsList.Equals(input.SKUPrepInstructionsList))
                ) &&
                (
                    InvalidSKUList == input.InvalidSKUList ||
                    (InvalidSKUList != null &&
                     InvalidSKUList.Equals(input.InvalidSKUList))
                ) &&
                (
                    ASINPrepInstructionsList == input.ASINPrepInstructionsList ||
                    (ASINPrepInstructionsList != null &&
                     ASINPrepInstructionsList.Equals(input.ASINPrepInstructionsList))
                ) &&
                (
                    InvalidASINList == input.InvalidASINList ||
                    (InvalidASINList != null &&
                     InvalidASINList.Equals(input.InvalidASINList))
                );
        }

        /// <summary>
        ///     To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetPrepInstructionsResult {\n");
            sb.Append("  SKUPrepInstructionsList: ").Append(SKUPrepInstructionsList).Append("\n");
            sb.Append("  InvalidSKUList: ").Append(InvalidSKUList).Append("\n");
            sb.Append("  ASINPrepInstructionsList: ").Append(ASINPrepInstructionsList).Append("\n");
            sb.Append("  InvalidASINList: ").Append(InvalidASINList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as GetPrepInstructionsResult);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                if (SKUPrepInstructionsList != null)
                    hashCode = hashCode * 59 + SKUPrepInstructionsList.GetHashCode();
                if (InvalidSKUList != null)
                    hashCode = hashCode * 59 + InvalidSKUList.GetHashCode();
                if (ASINPrepInstructionsList != null)
                    hashCode = hashCode * 59 + ASINPrepInstructionsList.GetHashCode();
                if (InvalidASINList != null)
                    hashCode = hashCode * 59 + InvalidASINList.GetHashCode();
                return hashCode;
            }
        }
    }
}