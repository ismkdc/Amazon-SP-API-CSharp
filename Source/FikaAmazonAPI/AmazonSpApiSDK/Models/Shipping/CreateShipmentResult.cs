/*
 * Selling Partner API for Shipping
 *
 * Provides programmatic access to Amazon Shipping APIs.
 *
 * OpenAPI spec version: v1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.Shipping
{
    /// <summary>
    ///     The payload schema for the createShipment operation.
    /// </summary>
    [DataContract]
    public class CreateShipmentResult : IEquatable<CreateShipmentResult>, IValidatableObject
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="CreateShipmentResult" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public CreateShipmentResult()
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="CreateShipmentResult" /> class.
        /// </summary>
        /// <param name="ShipmentId">ShipmentId (required).</param>
        /// <param name="EligibleRates">EligibleRates (required).</param>
        public CreateShipmentResult(ShipmentId ShipmentId = default, RateList EligibleRates = default)
        {
            // to ensure "ShipmentId" is required (not null)
            if (ShipmentId == null)
                throw new InvalidDataException(
                    "ShipmentId is a required property for CreateShipmentResult and cannot be null");
            this.ShipmentId = ShipmentId;
            // to ensure "EligibleRates" is required (not null)
            if (EligibleRates == null)
                throw new InvalidDataException(
                    "EligibleRates is a required property for CreateShipmentResult and cannot be null");
            this.EligibleRates = EligibleRates;
        }

        /// <summary>
        ///     Gets or Sets ShipmentId
        /// </summary>
        [DataMember(Name = "shipmentId", EmitDefaultValue = false)]
        public ShipmentId ShipmentId { get; set; }

        /// <summary>
        ///     Gets or Sets EligibleRates
        /// </summary>
        [DataMember(Name = "eligibleRates", EmitDefaultValue = false)]
        public RateList EligibleRates { get; set; }

        /// <summary>
        ///     Returns true if CreateShipmentResult instances are equal
        /// </summary>
        /// <param name="input">Instance of CreateShipmentResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateShipmentResult input)
        {
            if (input == null)
                return false;

            return
                (
                    ShipmentId == input.ShipmentId ||
                    (ShipmentId != null &&
                     ShipmentId.Equals(input.ShipmentId))
                ) &&
                (
                    EligibleRates == input.EligibleRates ||
                    (EligibleRates != null &&
                     EligibleRates.Equals(input.EligibleRates))
                );
        }

        /// <summary>
        ///     To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateShipmentResult {\n");
            sb.Append("  ShipmentId: ").Append(ShipmentId).Append("\n");
            sb.Append("  EligibleRates: ").Append(EligibleRates).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as CreateShipmentResult);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                if (ShipmentId != null)
                    hashCode = hashCode * 59 + ShipmentId.GetHashCode();
                if (EligibleRates != null)
                    hashCode = hashCode * 59 + EligibleRates.GetHashCode();
                return hashCode;
            }
        }
    }
}