/*
 * Selling Partner API for Merchant Fulfillment
 *
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.MerchantFulfillment
{
    /// <summary>
    ///     Request schema.
    /// </summary>
    [DataContract]
    public class GetEligibleShipmentServicesRequest : IEquatable<GetEligibleShipmentServicesRequest>, IValidatableObject
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="GetEligibleShipmentServicesRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public GetEligibleShipmentServicesRequest()
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="GetEligibleShipmentServicesRequest" /> class.
        /// </summary>
        /// <param name="shipmentRequestDetails">Shipment information required for requesting shipping service offers. (required).</param>
        /// <param name="shippingOfferingFilter">shippingOfferingFilter.</param>
        public GetEligibleShipmentServicesRequest(ShipmentRequestDetails shipmentRequestDetails = default,
            ShippingOfferingFilter shippingOfferingFilter = default)
        {
            // to ensure "shipmentRequestDetails" is required (not null)
            if (shipmentRequestDetails == null)
                throw new InvalidDataException(
                    "shipmentRequestDetails is a required property for GetEligibleShipmentServicesRequest and cannot be null");
            ShipmentRequestDetails = shipmentRequestDetails;
            ShippingOfferingFilter = shippingOfferingFilter;
        }

        /// <summary>
        ///     Shipment information required for requesting shipping service offers.
        /// </summary>
        /// <value>Shipment information required for requesting shipping service offers.</value>
        [DataMember(Name = "ShipmentRequestDetails", EmitDefaultValue = false)]
        public ShipmentRequestDetails ShipmentRequestDetails { get; set; }

        /// <summary>
        ///     Gets or Sets ShippingOfferingFilter
        /// </summary>
        [DataMember(Name = "ShippingOfferingFilter", EmitDefaultValue = false)]
        public ShippingOfferingFilter ShippingOfferingFilter { get; set; }

        /// <summary>
        ///     Returns true if GetEligibleShipmentServicesRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of GetEligibleShipmentServicesRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetEligibleShipmentServicesRequest input)
        {
            if (input == null)
                return false;

            return
                (
                    ShipmentRequestDetails == input.ShipmentRequestDetails ||
                    (ShipmentRequestDetails != null &&
                     ShipmentRequestDetails.Equals(input.ShipmentRequestDetails))
                ) &&
                (
                    ShippingOfferingFilter == input.ShippingOfferingFilter ||
                    (ShippingOfferingFilter != null &&
                     ShippingOfferingFilter.Equals(input.ShippingOfferingFilter))
                );
        }

        /// <summary>
        ///     To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetEligibleShipmentServicesRequest {\n");
            sb.Append("  ShipmentRequestDetails: ").Append(ShipmentRequestDetails).Append("\n");
            sb.Append("  ShippingOfferingFilter: ").Append(ShippingOfferingFilter).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as GetEligibleShipmentServicesRequest);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                if (ShipmentRequestDetails != null)
                    hashCode = hashCode * 59 + ShipmentRequestDetails.GetHashCode();
                if (ShippingOfferingFilter != null)
                    hashCode = hashCode * 59 + ShippingOfferingFilter.GetHashCode();
                return hashCode;
            }
        }
    }
}