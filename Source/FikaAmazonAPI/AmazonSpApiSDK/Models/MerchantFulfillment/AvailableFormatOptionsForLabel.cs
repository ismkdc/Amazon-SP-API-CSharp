/*
 * Selling Partner API for Merchant Fulfillment
 *
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.MerchantFulfillment
{
    /// <summary>
    ///     AvailableFormatOptionsForLabel
    /// </summary>
    [DataContract]
    public class AvailableFormatOptionsForLabel : IEquatable<AvailableFormatOptionsForLabel>, IValidatableObject
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="AvailableFormatOptionsForLabel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public AvailableFormatOptionsForLabel()
        {
        }

        /// <summary>
        ///     Returns true if AvailableFormatOptionsForLabel instances are equal
        /// </summary>
        /// <param name="input">Instance of AvailableFormatOptionsForLabel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AvailableFormatOptionsForLabel input)
        {
            if (input == null)
                return false;

            return false;
        }

        /// <summary>
        ///     To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AvailableFormatOptionsForLabel {\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as AvailableFormatOptionsForLabel);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            var hashCode = 41;
            return hashCode;
        }
    }
}