/*
 * Selling Partner API for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: v0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace FikaAmazonAPI.AmazonSpApiSDK.Models.FulfillmentOutbound
{
    /// <summary>
    ///     GetFulfillmentOrderResult
    /// </summary>
    [DataContract]
    public class GetFulfillmentOrderResult : IEquatable<GetFulfillmentOrderResult>, IValidatableObject
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="GetFulfillmentOrderResult" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public GetFulfillmentOrderResult()
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="GetFulfillmentOrderResult" /> class.
        /// </summary>
        /// <param name="FulfillmentOrder">FulfillmentOrder (required).</param>
        /// <param name="FulfillmentOrderItem">FulfillmentOrderItem (required).</param>
        /// <param name="FulfillmentShipment">FulfillmentShipment.</param>
        /// <param name="ReturnItemList">ReturnItemList (required).</param>
        /// <param name="ReturnAuthorizationList">ReturnAuthorizationList (required).</param>
        public GetFulfillmentOrderResult(FulfillmentOrder FulfillmentOrder = default,
            FulfillmentOrderItemList FulfillmentOrderItems = default,
            FulfillmentShipmentList FulfillmentShipments = default, ReturnItemList ReturnItems = default,
            ReturnAuthorizationList ReturnAuthorizations = default)
        {
            // to ensure "FulfillmentOrder" is required (not null)
            if (FulfillmentOrder == null)
                throw new InvalidDataException(
                    "FulfillmentOrder is a required property for GetFulfillmentOrderResult and cannot be null");
            this.FulfillmentOrder = FulfillmentOrder;
            // to ensure "FulfillmentOrderItem" is required (not null)
            if (FulfillmentOrderItems == null)
                throw new InvalidDataException(
                    "FulfillmentOrderItems is a required property for GetFulfillmentOrderResult and cannot be null");
            this.FulfillmentOrderItems = FulfillmentOrderItems;
            // to ensure "ReturnItemList" is required (not null)
            if (ReturnItems == null)
                throw new InvalidDataException(
                    "ReturnItems is a required property for GetFulfillmentOrderResult and cannot be null");
            this.ReturnItems = ReturnItems;
            // to ensure "ReturnAuthorizationList" is required (not null)
            if (ReturnAuthorizations == null)
                throw new InvalidDataException(
                    "ReturnAuthorizations is a required property for GetFulfillmentOrderResult and cannot be null");
            this.ReturnAuthorizations = ReturnAuthorizations;
            this.FulfillmentShipments = FulfillmentShipments;
        }

        /// <summary>
        ///     Gets or Sets FulfillmentOrder
        /// </summary>
        [DataMember(Name = "FulfillmentOrder", EmitDefaultValue = false)]
        public FulfillmentOrder FulfillmentOrder { get; set; }

        /// <summary>
        ///     Gets or Sets FulfillmentOrderItems
        /// </summary>
        [DataMember(Name = "FulfillmentOrderItems", EmitDefaultValue = false)]
        public FulfillmentOrderItemList FulfillmentOrderItems { get; set; }

        /// <summary>
        ///     Gets or Sets FulfillmentShipments
        /// </summary>
        [DataMember(Name = "FulfillmentShipments", EmitDefaultValue = false)]
        public FulfillmentShipmentList FulfillmentShipments { get; set; }

        /// <summary>
        ///     Gets or Sets ReturnItems
        /// </summary>
        [DataMember(Name = "ReturnItems", EmitDefaultValue = false)]
        public ReturnItemList ReturnItems { get; set; }

        /// <summary>
        ///     Gets or Sets ReturnAuthorizations
        /// </summary>
        [DataMember(Name = "ReturnAuthorizations", EmitDefaultValue = false)]
        public ReturnAuthorizationList ReturnAuthorizations { get; set; }

        /// <summary>
        ///     Returns true if GetFulfillmentOrderResult instances are equal
        /// </summary>
        /// <param name="input">Instance of GetFulfillmentOrderResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetFulfillmentOrderResult input)
        {
            if (input == null)
                return false;

            return
                (
                    FulfillmentOrder == input.FulfillmentOrder ||
                    (FulfillmentOrder != null &&
                     FulfillmentOrder.Equals(input.FulfillmentOrder))
                ) &&
                (
                    FulfillmentOrderItems == input.FulfillmentOrderItems ||
                    (FulfillmentOrderItems != null &&
                     FulfillmentOrderItems.Equals(input.FulfillmentOrderItems))
                ) &&
                (
                    FulfillmentShipments == input.FulfillmentShipments ||
                    (FulfillmentShipments != null &&
                     FulfillmentShipments.Equals(input.FulfillmentShipments))
                ) &&
                (
                    ReturnItems == input.ReturnItems ||
                    (ReturnItems != null &&
                     ReturnItems.Equals(input.ReturnItems))
                ) &&
                (
                    ReturnAuthorizations == input.ReturnAuthorizations ||
                    (ReturnAuthorizations != null &&
                     ReturnAuthorizations.Equals(input.ReturnAuthorizations))
                );
        }

        /// <summary>
        ///     To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetFulfillmentOrderResult {\n");
            sb.Append("  FulfillmentOrder: ").Append(FulfillmentOrder).Append("\n");
            sb.Append("  FulfillmentOrderItems: ").Append(FulfillmentOrderItems).Append("\n");
            sb.Append("  FulfillmentShipments: ").Append(FulfillmentShipments).Append("\n");
            sb.Append("  ReturnItems: ").Append(ReturnItems).Append("\n");
            sb.Append("  ReturnAuthorizations: ").Append(ReturnAuthorizations).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as GetFulfillmentOrderResult);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                if (FulfillmentOrder != null)
                    hashCode = hashCode * 59 + FulfillmentOrder.GetHashCode();
                if (FulfillmentOrderItems != null)
                    hashCode = hashCode * 59 + FulfillmentOrderItems.GetHashCode();
                if (FulfillmentShipments != null)
                    hashCode = hashCode * 59 + FulfillmentShipments.GetHashCode();
                if (ReturnItems != null)
                    hashCode = hashCode * 59 + ReturnItems.GetHashCode();
                if (ReturnAuthorizations != null)
                    hashCode = hashCode * 59 + ReturnAuthorizations.GetHashCode();
                return hashCode;
            }
        }
    }
}